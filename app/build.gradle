apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.pixabay"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "PixabayURL", "\"${getProperty("pixabay.api")}\""
        buildConfigField "String", "PixabayKey", "\"${getProperty("pixabay.key")}\""
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'com.google.android.material:material:1.2.0-alpha03'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // for lifecycle and LiveData and ViewModel
    def lifecycle_version = "2.1.0"
    implementation 'android.arch.lifecycle:runtime:1.1.1'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03'

    // fresco
    implementation 'com.facebook.fresco:fresco:1.13.0'

    // kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'

    // moshi
    def moshi_version = '1.9.2'
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // retrofit
    implementation 'com.squareup.retrofit2:converter-moshi:2.7.0'
    implementation 'com.squareup.retrofit2:retrofit:2.7.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'

    // koin
    def koin_version = '2.0.1'
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // airbnb
    def epoxy_version = '3.7.0'
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    implementation "com.airbnb.android:epoxy-databinding:$epoxy_version"
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"
    implementation 'com.airbnb.android:lottie:3.3.1'

    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Unit testing dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'io.mockk:mockk:1.9.3.kotlin12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'com.google.truth:truth:1.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3'
}

private Integer generateVersionCode() {
    return rootProject.ext.minimumSdkVersion * 10000000 +
            rootProject.ext.versionMajor * 100000 +
            rootProject.ext.versionMinor * 100 +
            rootProject.ext.versionPatch * 10
}

private String generateVersionName() {
    String versionName = "${rootProject.ext.versionMajor}.${rootProject.ext.versionMinor}.${rootProject.ext.versionPatch}"
    return versionName
}